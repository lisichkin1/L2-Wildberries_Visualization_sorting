import{delay,renderDivs,resetArr}from"./utils.js";import"../assets/styles/style.css";let array=[];const bubbleButton=document.querySelector(".bubble"),insertionButton=document.querySelector(".insertion"),quickButton=document.querySelector(".quick"),selectionButton=document.querySelector(".selection"),mergeButton=document.querySelector(".merge"),randomButton=document.querySelector(".random"),buttonPlay=document.querySelector(".play"),buttonstop=document.querySelector(".stop"),userInput=document.querySelector(".input"),userAddButton=document.querySelector(".user_add");let isSorting=!1,isRunning=!1,currentItem=0,nextItem=0,sortVariant="";const Compare={LESS_THAN:-1,EQUAL:0,BIGGER_THAN:1},userInputArray=()=>{array=userInput.value.split(" ").map(Number),renderDivs(null,null,array)},stopLoop=()=>{isRunning=!1},resumeLoop=()=>{isRunning||(isRunning=!0,"bubble"==sortVariant&&bubbleSort(),"insertion"==sortVariant&&insertionSort(),"quick"==sortVariant&&quickSort(array),"selection"==sortVariant&&selectionSort(),"merge"==sortVariant&&mergeSort(array))},bubbleSort=async()=>{sortVariant="bubble";const r=array.length,t=document.querySelectorAll(".array-item");isSorting=!0;for(let e=currentItem;e<r-1;e++){currentItem+=1;for(let n=nextItem;n<r-e-1;n++){if(!isRunning)return currentItem-=1,nextItem=n,void(isSorting=!1);if(nextItem+=1,array[n]>array[n+1]){const r=array[n];array[n]=array[n+1],array[n+1]=r,renderDivs(n,n+1,array),await delay(100)}t[n].classList.remove("greenItem"),t[n+1].classList.remove("redItem")}nextItem=0}currentItem=0,isSorting=!1,console.log(array)},defaultCompare=(r,t)=>r===t?Compare.EQUAL:r<t?Compare.LESS_THAN:Compare.BIGGER_THAN,insertionSort=async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultCompare;sortVariant="insertion";const{length:t}=array;let e;isSorting=!0;for(let n=1;n<t;n++){let t=n;for(e=array[n];t>0&&r(array[t-1],e)===Compare.BIGGER_THAN;)if(array[t]=array[t-1],array[t-1]=e,t--,renderDivs(t,t-1,array),await delay(100),!isRunning)return void(isSorting=!1);array[t]=e}},swap=(r,t,e)=>{let n=r[t];r[t]=r[e],r[e]=n},quickSort=function(r){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:defaultCompare;return sortVariant="quick",quick(r,0,r.length-1,t)},quick=async(r,t,e,n)=>{let i;return r.length>1&&(i=await partition(r,t,e,n),t<i-1&&await quick(r,t,i-1,n),i<e&&await quick(r,i,e,n)),r},partition=async(r,t,e,n)=>{const i=r[Math.floor((e+t)/2)];isSorting=!0;let o=t,a=e;for(;o<=a;){for(;n(r[o],i)===Compare.LESS_THAN;)o++;for(;n(r[a],i)===Compare.BIGGER_THAN;)a--;if(o<=a){if(swap(r,o,a),renderDivs(o,a,r),await delay(100),!isRunning)return void(isSorting=!1);o++,a--}}return isSorting=!1,o},selectionSort=async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:defaultCompare;sortVariant="selection";const{length:t}=array;let e;isSorting=!0;for(let n=0;n<t-1;n++){e=n;for(let i=n;i<t;i++)r(array[e],array[i])===Compare.BIGGER_THAN&&(e=i);if(n!==e&&(swap(array,n,e),renderDivs(n,e,array),await delay(100),!isRunning))return void(isSorting=!1)}isSorting=!1};let startMerge=0;const mergeSortAnimation=async function(r,t,e){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:defaultCompare;if(isRunning){if(t<e){const i=Math.floor((t+e)/2);await mergeSortAnimation(r,t,i,n),await mergeSortAnimation(r,i+1,e,n),await merge(r,t,i,e,n)}}else isSorting=!1},merge=async(r,t,e,n,i)=>{const o=r.slice(t,e+1),a=r.slice(e+1,n+1);isSorting=!0;let s=0,u=0,l=t;for(;s<o.length&&u<a.length;){if(!isRunning)return isSorting=!1,void(array=r);i(o[s],a[u])===Compare.LESS_THAN?r[l++]=o[s++]:r[l++]=a[u++],renderDivs(t,n,r),await delay(100)}for(;s<o.length;)r[l++]=o[s++],renderDivs(t,n,r),await delay(100);for(;u<a.length;)r[l++]=a[u++],renderDivs(t,n,r),await delay(100);isSorting=!1,renderDivs(t,n,r),await delay(100)},mergeSort=function(r){sortVariant="merge";const t=[...r];return mergeSortAnimation(t,startMerge,t.length-1,arguments.length>1&&void 0!==arguments[1]?arguments[1]:defaultCompare),t};bubbleButton.addEventListener("click",(()=>{isRunning=!0,isSorting||bubbleSort()})),insertionButton.addEventListener("click",(()=>{isRunning=!0,isSorting||insertionSort()})),quickButton.addEventListener("click",(()=>{isRunning=!0,isSorting||quickSort(array)})),selectionButton.addEventListener("click",(()=>{isRunning=!0,isSorting||selectionSort()})),mergeButton.addEventListener("click",(()=>{isRunning=!0,isSorting||mergeSort(array)})),randomButton.addEventListener("click",(()=>{isSorting||(array=resetArr(),renderDivs(null,null,array))})),buttonPlay.addEventListener("click",(()=>{resumeLoop()})),buttonstop.addEventListener("click",(()=>{stopLoop()})),userAddButton.addEventListener("click",(()=>{userInputArray()})),array=resetArr(),renderDivs(null,null,array);